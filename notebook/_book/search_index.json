[["index.html", "STAT5 project - Kohei Kume Section1 Project Overview", " STAT5 project - Kohei Kume Mark Robinson 2021-03-25 Section1 Project Overview …placeholder… # automatically create a bib database for R packages knitr::write_bib(c(&#39;DESeq2&#39;,&#39;tximport&#39;,&#39;fgsea&#39;), &#39;packages.bib&#39;) "],["bcl6myc-dual-reporter-de.html", "Section2 BCL6/MYC Dual Reporter DE 2.1 Background 2.2 Setup 2.3 Sample Info 2.4 Load and preprocess counts 2.5 Differential Expression 2.6 Annotate and tidy 2.7 Volano plot 2.8 Full GSEA 2.9 Select GSEA 2.10 GSEA plots 2.11 Downloads 2.12 Session info", " Section2 BCL6/MYC Dual Reporter DE 2.1 Background To characterise the transcriptional programs driven by MYC and BCL6 in B-cells, a dual reporter system was established with GFP-Myc and mCherry-BCL6 in normal mouse pre-B cultured in Il7, and pre-B trasnformed by either BCR-ABL1 or NRAS G12D. Note: no mCherry+ population is observed in the BCR-ABL1 condition due to BA driving Myc program &amp; thereby repressing Bcl6. 2.2 Setup # load libraries library(tidyverse) library(tximport) library(DESeq2) library(openxlsx) library(DT) library(EnsDb.Mmusculus.v79) txdb &lt;- EnsDb.Mmusculus.v79 # make tx2gene k &lt;- keys(txdb, keytype = &quot;TXID&quot;) tx2gene &lt;- select(txdb, k, &quot;GENEID&quot;, &quot;TXID&quot;) 2.3 Sample Info files &lt;- list.files(&quot;../processed_data/RNAseq/BCL6_MYC_salmon&quot;, pattern = &quot;quant.sf&quot;, recursive = T, full.names = T) pattern &lt;- &quot;^.+/XLR[0-9]+_(([A-Za-z]+)_([A-Za-z]+)_(rep[0-9]+))/quant.sf$&quot; smi &lt;- data.frame(sample_id = sub(pattern, &quot;\\\\1&quot;,files), condition = sub(pattern, &quot;\\\\2_\\\\3&quot;,files), replicate = sub(pattern, &quot;\\\\4&quot;,files), path = files) names(files) &lt;- smi$sample_id smi %&gt;% arrange(sample_id) %&gt;% DT::datatable(escape = F, rownames = F, colnames = c(&quot;Sample ID&quot;, &quot;Condition&quot;, &quot;Replicate&quot;, &quot;File Path&quot;), options = list( scrollX = TRUE, columnDefs = list(list( targets = 3, render = JS( &quot;function(data, type, row, meta) {&quot;, &quot;return type === &#39;display&#39; &amp;&amp; data.length &gt; 35 ?&quot;, &quot;&#39;&lt;span title=\\&quot;&#39; + data + &#39;\\&quot;&gt;&#39; + data.substr(0, 35) + &#39;...&lt;/span&gt;&#39; : data;&quot;, &quot;}&quot;))) ), callback = JS(&#39;table.page(3).draw(false);&#39;)) 2.4 Load and preprocess counts txi &lt;- tximport(files, type = &quot;salmon&quot;, tx2gene = tx2gene, ignoreTxVersion = T) dds &lt;- DESeqDataSetFromTximport(txi, colData = smi, design = ~condition) dds &lt;- dds[rowMeans(counts(dds)) &gt; 5, ] dds &lt;- DESeq(dds) saveRDS(dds, &quot;../processed_data/RNAseq/BCL6_MYC_dds.2020-03-11.rds&quot;) 2.5 Differential Expression contrasts &lt;- list(preB_GFP_vs_DN = &quot;preB_GFPpos_vs_preB_DN&quot;, preB_Cherry_vs_DN = &quot;preB_Cherrypos_vs_preB_DN&quot;, preB_GFP_vs_Cherry = &quot;preB_GFPpos_vs_preB_Cherrypos&quot;, NRAS_GFP_vs_DN = &quot;Nras_GFPpos_vs_Nras_DN&quot;, NRAS_Cherry_vs_DN = &quot;Nras_Cherrypos_vs_Nras_DN&quot;, NRAS_GFP_vs_Cherry = &quot;Nras_GFPpos_vs_Nras_Cherrypos&quot;, BCRABL_GFP_vs_DN = &quot;BA_GFPpos_vs_BA_DN&quot;) deres &lt;- lapply(contrasts, function(contrast) { a &lt;- sub(&quot;^(.+)_vs_(.+)$&quot;, &quot;\\\\1&quot;, contrast) b &lt;- sub(&quot;^(.+)_vs_(.+)$&quot;, &quot;\\\\2&quot;, contrast) res &lt;- results(dds, contrast=c(&quot;condition&quot;, a, b)) lfcShrink(dds, contrast = c(&quot;condition&quot;, a, b), res = res, type = &quot;normal&quot;) }) 2.6 Annotate and tidy rlog &lt;- rlog(dds) genesymb &lt;- mapIds(txdb, keys = rownames(deres[[1]]), keytype = &quot;GENEID&quot;, column = &quot;SYMBOL&quot;) wb &lt;- createWorkbook() deanno &lt;- lapply(names(contrasts), function(contrast) { resdf &lt;- as.data.frame(deres[[contrast]]) a &lt;- sub(&quot;^(.+)_vs_(.+)$&quot;, &quot;\\\\1&quot;, contrasts[[contrast]]) b &lt;- sub(&quot;^(.+)_vs_(.+)$&quot;, &quot;\\\\2&quot;, contrasts[[contrast]]) resdf &lt;- cbind(resdf, assay(rlog)[, c(grep(b, colnames(rlog)), grep(a, colnames(rlog)))]) resdf$gene_symbol &lt;- genesymb resdf$ensembl_id &lt;- rownames(resdf) resdf$baseMean &lt;- log2(resdf$baseMean) resdf[,paste0(&quot;av_&quot;, b)] &lt;- rowMeans(assay(rlog)[, grep(b, colnames(rlog))]) resdf[,paste0(&quot;av_&quot;, a)] &lt;- rowMeans(assay(rlog)[, grep(a, colnames(rlog))]) resdf &lt;- resdf[order(resdf$pvalue), c(13:14,2,6,3,1,15:16,7:12)] colnames(resdf)[3:6] &lt;- c(&quot;L2FC&quot;,&quot;qval&quot;,&quot;L2FC_SE&quot;,&quot;av_expr&quot;) addWorksheet(wb, sheetName = contrast) writeData(wb, resdf, sheet = contrast, rowNames = F) freezePane(wb, sheet = contrast, firstRow = TRUE, firstCol = TRUE) return(resdf) }) names(deanno) &lt;- names(contrasts) saveWorkbook(wb, &quot;../results/BCL6_MYC_DE.2020-03-11.xlsx&quot;, overwrite = T) saveRDS(deanno, &quot;../processed_data/RNAseq/BCL6_MYC_DE.2020-03-11.rds&quot;) dds &lt;- readRDS(&quot;../processed_data/RNAseq/BCL6_MYC_dds.2020-03-11.rds&quot;) deanno &lt;- readRDS(&quot;../processed_data/RNAseq/BCL6_MYC_DE.2020-03-11.rds&quot;) lapply(names(deanno), function(x) { y &lt;- as.data.frame(deanno[[x]]) %&gt;% dplyr::filter(qval &lt; 0.05) data.frame(condition = x, upreg = y %&gt;% dplyr::filter(L2FC &gt; 1) %&gt;% nrow(), dnreg = y %&gt;% dplyr::filter(L2FC &lt; -1) %&gt;% nrow()) }) %&gt;% bind_rows() %&gt;% kableExtra::kable() condition upreg dnreg preB_GFP_vs_DN 324 870 preB_Cherry_vs_DN 994 812 preB_GFP_vs_Cherry 1571 2250 NRAS_GFP_vs_DN 392 849 NRAS_Cherry_vs_DN 593 201 NRAS_GFP_vs_Cherry 964 1809 BCRABL_GFP_vs_DN 94 116 2.7 Volano plot goi &lt;- c(&quot;Egr1&quot;, &quot;Dusp6&quot;, &quot;Cish&quot;, &quot;Hk1&quot;, &quot;Hk2&quot;) plotdat &lt;- lapply(names(deanno), function(comp) { x &lt;- deanno[[comp]] x$col &lt;- &quot;B&quot; x[which(x$qval &lt; 0.05 &amp; x$L2FC &gt; 0.58),]$col &lt;- &quot;A&quot; x[which(x$qval &lt; 0.05 &amp; x$L2FC &lt; -0.58),]$col &lt;- &quot;C&quot; if (any(x$qval &lt; 1e-150, na.rm = T)) x[which(x$qval&lt;1e-150),]$qval &lt;- 1e-150 topg &lt;- top_n(x, 10, -qval)$gene_symbol x$label &lt;- ifelse(x$gene_symbol %in% c(topg, goi) &amp; x$qval &lt; 1e-03, x$gene_symbol, &quot;&quot;) x$comparison &lt;- comp return(x[,c(1:6,15:17)]) }) %&gt;% bind_rows() (p &lt;- ggplot(plotdat, aes(x = L2FC, y = -log10(qval))) + geom_hline(yintercept = -log10(0.05), color = &quot;firebrick&quot;, alpha = .2, lty=2) + geom_vline(xintercept = 0, color = &quot;firebrick&quot;, alpha = .2, lty=2) + geom_point(aes(col=col), alpha = .5, size=1) + ggrepel::geom_text_repel(aes(label = label)) + facet_wrap(~comparison, nrow = 3, scales = &quot;free_y&quot;) + scale_color_manual(values = c(&quot;firebrick4&quot;,&quot;grey40&quot;,&quot;steelblue4&quot;)) + scale_x_continuous(name = &quot;Fold change (log2)&quot;) + scale_y_continuous(name = &quot;Significance (-log10 p-value)&quot;) + theme(text = element_text(size = 14, color = &quot;black&quot;, family = &quot;Arial&quot;), axis.text = element_text(size = 11, color = &quot;black&quot;, family = &quot;Arial&quot;), panel.grid = element_blank(), panel.background = element_blank(), panel.border = element_rect(color = &quot;black&quot;, fill = NA), strip.background = element_blank(), strip.text = element_text(size = 12, color = &quot;black&quot;, family = &quot;Arial&quot;), legend.position = &quot;none&quot;)) 2.8 Full GSEA Note: This analysis was run on all REACTOME, KEGG, MSigDB Hallmark, and WIKIPATHWAY database gene sets (with some minor filtering for irrelevant sets). This is useful for data exploration but will inflate q-value/padj simply due to the large number of tests performed, hence these results should be used to identify potentially interesting pathways before performing more selective enrichment testing for more appropriate statistical values. library(msigdbr) library(fgsea) msig &lt;- rbind(msigdbr(species = &quot;Mus musculus&quot;, category = &quot;H&quot;), msigdbr(species = &quot;Mus musculus&quot;, category = &quot;C2&quot;, subcategory = &quot;CP:REACTOME&quot;), msigdbr(species = &quot;Mus musculus&quot;, category = &quot;C2&quot;, subcategory = &quot;CP:KEGG&quot;), msigdbr(species = &quot;Mus musculus&quot;, category = &quot;C5&quot;)) gs &lt;- split(msig$gene_symbol, msig$gs_name) internal_gs &lt;- readRDS(&quot;../../resources/public_genesets_Mm.rds&quot;) gs &lt;- c(gs, internal_gs) gs &lt;- gs[!grepl(paste0(&quot;sperm|xeno|graft|naba|spinal|neuro|sclerosis&quot;, &quot;|tion_of_hscs|photo|leish|diabetes|lupus|ebola&quot;, &quot;|staph|syndrome|myo|nicotin|asthma|thyroid_stim&quot;, &quot;|gastrin|alcohol|nutrient|carcinoma|muscle_contr&quot;, &quot;|metapathway|amyloid|fusion_mutants|circadian&quot;), names(gs), ignore.case = T)] gl &lt;- lapply(deanno, function(x) { tmp &lt;- x$L2FC names(tmp) &lt;- x$gene_symbol tmp &lt;- tmp[!is.na(names(tmp)) &amp; names(tmp) != &quot;&quot; &amp; !is.na(tmp) &amp; is.finite(tmp)] tmp &lt;- tmp[order(-tmp)] tmp[!duplicated(names(tmp))] }) gseres &lt;- lapply(gl, function(x) { fgseaSimple(pathways = gs, stats = x, nperm = 1000, minSize = 10, maxSize = 500) %&gt;% dplyr::filter(lengths(leadingEdge) &gt; 3) %&gt;% arrange(pval) }) wb &lt;- createWorkbook() lapply(names(gseres), function(contrast) { gse &lt;- as.data.frame(gseres[[contrast]]) addWorksheet(wb, sheetName = contrast) writeData(wb, gse, sheet = contrast, rowNames = F) freezePane(wb, sheet = contrast, firstRow = TRUE, firstCol = TRUE) return(NULL) }) ## [[1]] ## NULL ## ## [[2]] ## NULL ## ## [[3]] ## NULL ## ## [[4]] ## NULL ## ## [[5]] ## NULL ## ## [[6]] ## NULL ## ## [[7]] ## NULL saveWorkbook(wb, &quot;../results/BCL6_MYC_DE_fullGSEA.2020-03-11.xlsx&quot;, overwrite = T) lapply(names(gseres), function(x) { tmp &lt;- gseres[[x]] %&gt;% dplyr::filter(pval &lt; 0.1) %&gt;% dplyr::select(pathway, NES) tmp[,2] &lt;- round(tmp[,2], 3) colnames(tmp)[2] &lt;- x return(tmp) }) %&gt;% Reduce(f = function(x,y) { merge(x, y, by=&quot;pathway&quot;) }) %&gt;% arrange(-apply(., 1, var)) %&gt;% mutate(pathway = ifelse(pathway %in% names(internal_gs), pathway, paste0(&#39;&lt;a href=https://www.gsea-msigdb.org/gsea/msigdb/cards/&#39;, pathway, &#39;.html&gt;&#39;, substr(pathway, 0,30), &#39;&lt;/a&gt;&#39;))) %&gt;% DT::datatable(escape = F, rownames = F, options = list( scrollX = TRUE)) 2.9 Select GSEA poi &lt;- c(&quot;KEGG_JAK_STAT_SIGNALING_PATHWAY&quot;, &quot;HALLMARK_MYC_TARGETS_V2&quot;, &quot;HALLMARK_UNFOLDED_PROTEIN_RESPONSE&quot;, &quot;REACTOME_ONCOGENE_INDUCED_SENESCENCE&quot;, &quot;REACTOME_INTRA_GOLGI_TRAFFIC&quot;, &quot;GO_PROTEIN_LOCALIZATION_TO_PHAGOPHORE_ASSEMBLY_SITE&quot;, &quot;GO_PHAGOPHORE_ASSEMBLY_SITE_MEMBRANE&quot;, &quot;REACTOME_ATF6_ATF6_ALPHA_ACTIVATES_CHAPERONE_GENES&quot;, &quot;HALLMARK_GLYCOLYSIS&quot;, &quot;HALLMARK_KRAS_SIGNALING_UP&quot;, &quot;Prdm1_repressed_preB&quot;) gsub &lt;- gs[names(gs) %in% poi] gseres &lt;- lapply(gl, function(x) { fgseaSimple(pathways = gsub, stats = x, nperm = 10000, minSize = 10, maxSize = 500) %&gt;% arrange(pval) }) saveRDS(gseres, &quot;../processed_data/RNAseq/BCL6_MYC_DE_subGSEA.2020-03-11.rds&quot;) wb &lt;- createWorkbook() null &lt;- lapply(names(gseres), function(contrast) { gse &lt;- as.data.frame(gseres[[contrast]]) addWorksheet(wb, sheetName = contrast) writeData(wb, gse, sheet = contrast, rowNames = F) freezePane(wb, sheet = contrast, firstRow = TRUE, firstCol = TRUE) }) saveWorkbook(wb, &quot;../results/BCL6_MYC_DE_subGSEA.2020-03-11.xlsx&quot;, overwrite = T) gseres &lt;- readRDS(&quot;../processed_data/RNAseq/BCL6_MYC_DE_subGSEA.2020-03-11.rds&quot;) lapply(names(gseres), function(x) { gseres[[x]] %&gt;% mutate(pvaltxt = ifelse(padj &lt; 0.001, &quot;***&quot;, ifelse(padj &lt; 0.01, &quot;**&quot;, ifelse(padj &lt; 0.05, &quot;*&quot;, &quot;-&quot;))), cond = x, score = -log10(padj)*NES) %&gt;% dplyr::select(pathway, score, pvaltxt, cond) }) %&gt;% bind_rows() %&gt;% mutate(cond=factor(cond, levels=unique(cond))) %&gt;% ggplot(aes(x=cond, y=pathway, fill=score, label=pvaltxt)) + geom_tile() + geom_text() + scale_x_discrete(expand=c(0,0), name=&quot;&quot;) + scale_y_discrete(expand=c(0,0), name=&quot;&quot;) + scale_fill_gradient2(low=&quot;steelblue4&quot;, mid=&quot;white&quot;, high=&quot;firebrick4&quot;) + theme_bw(base_size = 12, base_family = &quot;Arial&quot;) + theme(panel.background = element_blank(), panel.border = element_rect(color=&quot;black&quot;, fill=NA), axis.text.x = element_text(angle=45, hjust=1), axis.ticks = element_blank(), legend.position = &quot;none&quot;) 2.10 GSEA plots source(&quot;../../resources/fsea.R&quot;) library(rvg) library(officer) library(cowplot) ppt &lt;- read_pptx() pl &lt;- lapply(poi[!grepl(&quot;LIPO&quot;, poi)], function(path) { pathplots &lt;- lapply(names(gseres), function(contrast) { plot_fgsea(gseres[[contrast]], gl[[contrast]], gs, path) + ggtitle(contrast) + theme(plot.title = element_text(size=9)) }) title &lt;- ggdraw() + draw_label(path) combined &lt;- plot_grid(plotlist = pathplots, align = &quot;vh&quot;, ncol = 3) p &lt;- plot_grid(title, combined, ncol = 1, rel_heights = c(0.05, 1)) add_slide(x = ppt, layout = &quot;Title and Content&quot;, master = &quot;Office Theme&quot;) %&gt;% ph_with(value = dml(ggobj = p), location = ph_location(height = 5, width = 9, left = 0.25, top = 0.5), bg = &quot;transparent&quot;) return(p) }) names(pl) &lt;- poi[!grepl(&quot;LIPO&quot;, poi)] print(ppt, target=&quot;../img/BCL6_MYC_DE_subGSEAplots.2020-03-11.pptx&quot;) pl$HALLMARK_UNFOLDED_PROTEIN_RESPONSE 2.11 Downloads Differential expression results (xlsx). Full GSEA results for exploratory analysis (xlsx). GSEA subset for stats on selected pathways (xlsx). GSEA plots (vecotorised pptx). 2.12 Session info sessionInfo() ## R version 4.0.4 (2021-02-15) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Catalina 10.15.7 ## ## Matrix products: default ## BLAS: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] parallel stats4 stats graphics grDevices utils datasets ## [8] methods base ## ## other attached packages: ## [1] gdtools_0.2.3 cowplot_1.1.1 ## [3] officer_0.3.17 rvg_0.2.5 ## [5] fgsea_1.16.0 msigdbr_7.2.1 ## [7] EnsDb.Mmusculus.v79_2.99.0 ensembldb_2.14.0 ## [9] AnnotationFilter_1.14.0 GenomicFeatures_1.42.2 ## [11] AnnotationDbi_1.52.0 DT_0.17 ## [13] openxlsx_4.2.3 DESeq2_1.30.1 ## [15] SummarizedExperiment_1.20.0 Biobase_2.50.0 ## [17] MatrixGenerics_1.2.1 matrixStats_0.58.0 ## [19] GenomicRanges_1.42.0 GenomeInfoDb_1.26.4 ## [21] IRanges_2.24.1 S4Vectors_0.28.1 ## [23] BiocGenerics_0.36.0 tximport_1.18.0 ## [25] forcats_0.5.1 stringr_1.4.0 ## [27] dplyr_1.0.5 purrr_0.3.4 ## [29] readr_1.4.0 tidyr_1.1.3 ## [31] tibble_3.1.0 ggplot2_3.3.3 ## [33] tidyverse_1.3.0 ## ## loaded via a namespace (and not attached): ## [1] uuid_0.1-4 readxl_1.3.1 backports_1.2.1 ## [4] fastmatch_1.1-0 BiocFileCache_1.14.0 systemfonts_1.0.1 ## [7] lazyeval_0.2.2 splines_4.0.4 BiocParallel_1.24.1 ## [10] crosstalk_1.1.1 digest_0.6.27 htmltools_0.5.1.1 ## [13] fansi_0.4.2 magrittr_2.0.1 memoise_2.0.0 ## [16] Biostrings_2.58.0 annotate_1.68.0 modelr_0.1.8 ## [19] svglite_2.0.0 askpass_1.1 prettyunits_1.1.1 ## [22] colorspace_2.0-0 blob_1.2.1 rvest_1.0.0 ## [25] rappdirs_0.3.3 ggrepel_0.9.1 haven_2.3.1 ## [28] xfun_0.22 crayon_1.4.1 RCurl_1.98-1.3 ## [31] jsonlite_1.7.2 genefilter_1.72.1 survival_3.2-10 ## [34] glue_1.4.2 kableExtra_1.3.4 gtable_0.3.0 ## [37] zlibbioc_1.36.0 XVector_0.30.0 webshot_0.5.2 ## [40] DelayedArray_0.16.2 scales_1.1.1 DBI_1.1.1 ## [43] Rcpp_1.0.6 viridisLite_0.3.0 xtable_1.8-4 ## [46] progress_1.2.2 bit_4.0.4 htmlwidgets_1.5.3 ## [49] httr_1.4.2 RColorBrewer_1.1-2 ellipsis_0.3.1 ## [52] pkgconfig_2.0.3 XML_3.99-0.6 farver_2.1.0 ## [55] sass_0.3.1 dbplyr_2.1.0 locfit_1.5-9.4 ## [58] utf8_1.2.1 tidyselect_1.1.0 labeling_0.4.2 ## [61] rlang_0.4.10 munsell_0.5.0 cellranger_1.1.0 ## [64] tools_4.0.4 cachem_1.0.4 cli_2.3.1 ## [67] generics_0.1.0 RSQLite_2.2.4 broom_0.7.5 ## [70] evaluate_0.14 fastmap_1.1.0 yaml_2.2.1 ## [73] knitr_1.31 bit64_4.0.5 fs_1.5.0 ## [76] zip_2.1.1 xml2_1.3.2 biomaRt_2.46.3 ## [79] compiler_4.0.4 rstudioapi_0.13 curl_4.3 ## [82] reprex_1.0.0 geneplotter_1.68.0 bslib_0.2.4 ## [85] stringi_1.5.3 highr_0.8 lattice_0.20-41 ## [88] ProtGenerics_1.22.0 Matrix_1.3-2 vctrs_0.3.6 ## [91] pillar_1.5.1 lifecycle_1.0.0 jquerylib_0.1.3 ## [94] data.table_1.14.0 bitops_1.0-6 rtracklayer_1.50.0 ## [97] R6_2.5.0 bookdown_0.21 gridExtra_2.3 ## [100] assertthat_0.2.1 openssl_1.4.3 withr_2.4.1 ## [103] GenomicAlignments_1.26.0 Rsamtools_2.6.0 GenomeInfoDbData_1.2.4 ## [106] hms_1.0.0 grid_4.0.4 rmarkdown_2.7 ## [109] lubridate_1.7.10 "],["icn1-im-de.html", "Section3 ICN1 IM DE 3.1 Background 3.2 Setup 3.3 Sample Info 3.4 Load and preprocess counts 3.5 Differential Expression 3.6 Annotate and tidy 3.7 Volano plot 3.8 Full GSEA 3.9 Select GSEA 3.10 GSEA plots 3.11 Downloads 3.12 Session info", " Section3 ICN1 IM DE 3.1 Background To determine whether transcriptional changes associated with the Myc-to-Bcl6 transition observed in mouse pre-B cells (both STAT5-CA/YF and dual-reporter assays) are conserved in human, patient derived xenograft cells ICN1 were treated with 5uM IM for 5h. 3.2 Setup # load libraries library(tidyverse) library(tximport) library(DESeq2) library(openxlsx) library(DT) library(EnsDb.Hsapiens.v86) txdb &lt;- EnsDb.Hsapiens.v86 # make tx2gene k &lt;- keys(txdb, keytype = &quot;TXID&quot;) tx2gene &lt;- select(txdb, k, &quot;GENEID&quot;, &quot;TXID&quot;) 3.3 Sample Info files &lt;- list.files(&quot;../processed_data/RNAseq/ICN1_IM_salmon&quot;, pattern = &quot;quant.sf&quot;, recursive = T, full.names = T) pattern &lt;- &quot;^.+(ICN1)_(Imatinib|veh).*_(rep[0-9])/quant.sf$&quot; smi &lt;- data.frame(sample_id = sub(pattern, &quot;\\\\1_\\\\2_\\\\3&quot;,files), condition = sub(pattern, &quot;\\\\2&quot;,files), replicate = sub(pattern, &quot;\\\\3&quot;,files), file = files) names(files) &lt;- smi$sample_id rownames(smi) &lt;- smi$sample_id DT::datatable(smi, escape = F, rownames = F, colnames = c(&quot;Sample ID&quot;, &quot;Condition&quot;, &quot;Replicate&quot;, &quot;File Path&quot;), options = list( columnDefs = list(list( targets = 3, render = JS( &quot;function(data, type, row, meta) {&quot;, &quot;return type === &#39;display&#39; &amp;&amp; data.length &gt; 35 ?&quot;, &quot;&#39;&lt;span title=\\&quot;&#39; + data + &#39;\\&quot;&gt;&#39; + data.substr(0, 35) + &#39;...&lt;/span&gt;&#39; : data;&quot;, &quot;}&quot;))) ), callback = JS(&#39;table.page(3).draw(false);&#39;)) 3.4 Load and preprocess counts txi &lt;- tximport(files, type = &quot;salmon&quot;, tx2gene = tx2gene, ignoreTxVersion = T) dds &lt;- DESeqDataSetFromTximport(txi, colData = smi, design = ~condition) dds &lt;- dds[rowMeans(counts(dds)) &gt; 5, ] dds &lt;- DESeq(dds) saveRDS(dds, &quot;../processed_data/RNAseq/ICN1_IM_dds.2021-02-08.rds&quot;) 3.5 Differential Expression dds &lt;- readRDS(&quot;../processed_data/RNAseq/ICN1_IM_dds.2021-02-08.rds&quot;) deres &lt;- results(dds, contrast=c(&quot;condition&quot;, &quot;Imatinib&quot;, &quot;veh&quot;)) deres &lt;- lfcShrink(dds, contrast=c(&quot;condition&quot;, &quot;Imatinib&quot;, &quot;veh&quot;), res = deres, type = &quot;normal&quot;) summary(deres) ## ## out of 18807 with nonzero total read count ## adjusted p-value &lt; 0.1 ## LFC &gt; 0 (up) : 1682, 8.9% ## LFC &lt; 0 (down) : 2014, 11% ## outliers [1] : 0, 0% ## low counts [2] : 5105, 27% ## (mean count &lt; 37) ## [1] see &#39;cooksCutoff&#39; argument of ?results ## [2] see &#39;independentFiltering&#39; argument of ?results 3.6 Annotate and tidy rlog &lt;- rlog(dds) resdf &lt;- as.data.frame(deres) resdf &lt;- cbind(resdf, assay(rlog)[,c(3:4,1:2)]) resdf$gene_symbol &lt;- mapIds(txdb, keys = rownames(resdf), keytype = &quot;GENEID&quot;, column = &quot;SYMBOL&quot;) resdf$ensembl_id &lt;- rownames(resdf) resdf$baseMean &lt;- log2(resdf$baseMean) resdf$av_VEH &lt;- rowMeans(assay(rlog)[,c(3:4)]) resdf$av_IM &lt;- rowMeans(assay(rlog)[,c(1:2)]) resdf &lt;- resdf[order(resdf$pvalue), c(11:12,2,6,3,1,13:14,7:10)] colnames(resdf)[3:12] &lt;- c(&quot;L2FC&quot;, &quot;qval&quot;, &quot;L2FC_SE&quot;, &quot;av_expr&quot;,&quot;av_VEH&quot;,&quot;av_IM&quot;, &quot;ICN1_VEH_r1&quot;, &quot;ICN1_VEH_r2&quot;, &quot;ICN1_IM_r1&quot;, &quot;ICN1_IM_r2&quot;) saveRDS(resdf, &quot;../processed_data/RNAseq/ICN1_IM_DE.2021-02-08.rds&quot;) write.xlsx(resdf, &quot;../results/ICN1_IM_DE.2021-02-08.xlsx&quot;, row.names = F, firstRow=T, firstCol=T) resdf %&gt;% dplyr::filter(qval &lt; 0.05) %&gt;% dplyr::select(gene_symbol, L2FC, qval, av_VEH, av_IM) %&gt;% mutate(gene_symbol = paste0(&#39;&lt;a href=https://www.genecards.org/cgi-bin/carddisp.pl?gene=&#39;, gene_symbol, &#39;&gt;&#39;, gene_symbol, &#39;&lt;/a&gt;&#39;), L2FC = round(L2FC, 3), qval = signif(qval, 3), av_VEH = round(av_VEH, 3), av_IM = round(av_IM, 3)) %&gt;% DT::datatable(escape = F, rownames = F) 3.7 Volano plot library(ggrepel) plotdat &lt;- resdf plotdat$col &lt;- &quot;B&quot; plotdat[which(plotdat$qval &lt; 0.05 &amp; plotdat$L2FC &gt; 0.58),]$col &lt;- &quot;A&quot; plotdat[which(plotdat$qval &lt; 0.05 &amp; plotdat$L2FC &lt; -0.58),]$col &lt;- &quot;C&quot; plotdat[which(plotdat$qval&lt;1e-50),]$qval &lt;- 1e-50 goi &lt;- c(&quot;EGR1&quot;, &quot;DUSP6&quot;, &quot;CISH&quot;, &quot;HK1&quot;, &quot;HK2&quot;, top_n(plotdat, 25, qval)) plotdat$label &lt;- ifelse(plotdat$gene_symbol %in% goi, plotdat$gene_symbol, &quot;&quot;) (p &lt;- ggplot(plotdat, aes (x = L2FC, y = -log10(qval))) + geom_hline(yintercept = -log10(0.05), color = &quot;firebrick&quot;, alpha = .2) + geom_point(aes(col=col), alpha = .5) + geom_text_repel(aes(label = label)) + scale_color_manual(values = c(&quot;firebrick4&quot;,&quot;grey40&quot;,&quot;steelblue4&quot;)) + scale_x_continuous(limits = c(-10,10), name = &quot;Fold change (log2)&quot;) + scale_y_continuous(name = &quot;Significance (-log10 p-value)&quot;) + theme(text = element_text(size = 14, color = &quot;black&quot;, family = &quot;Arial&quot;), axis.text = element_text(size = 11, color = &quot;black&quot;, family = &quot;Arial&quot;), panel.grid = element_blank(), panel.background = element_blank(), panel.border = element_rect(color = &quot;black&quot;, fill = NA), strip.background = element_blank(), strip.text = element_text(size = 12, color = &quot;black&quot;, family = &quot;Arial&quot;), legend.position = &quot;none&quot;)) 3.8 Full GSEA Note: This analysis was run on all REACTOME, KEGG, MSigDB Hallmark, and WIKIPATHWAY database gene sets (with some minor filtering for irrelevant sets). This is useful for data exploration but will inflate q-value/padj simply due to the large number of tests performed, hence these results should be used to identify potentially interesting pathways before performing more selective enrichment testing for more appropriate statistical values. library(msigdbr) library(fgsea) msig &lt;- rbind(msigdbr(species = &quot;Homo sapiens&quot;, category = &quot;H&quot;), msigdbr(species = &quot;Homo sapiens&quot;, category = &quot;C2&quot;, subcategory = &quot;CP:REACTOME&quot;), msigdbr(species = &quot;Homo sapiens&quot;, category = &quot;C2&quot;, subcategory = &quot;CP:KEGG&quot;), msigdbr(species = &quot;Homo sapiens&quot;, category = &quot;C5&quot;)) gs &lt;- split(msig$gene_symbol, msig$gs_name) internal_gs &lt;- readRDS(&quot;../../resources/public_genesets_Hs.rds&quot;) gs &lt;- c(gs, internal_gs) gs &lt;- gs[!grepl(paste0(&quot;sperm|xeno|graft|naba|spinal|neuro|sclerosis&quot;, &quot;|tion_of_hscs|photo|leish|diabetes|lupus&quot;, &quot;|staph|syndrome|myo|nicotin|asthma|thyroid_stim&quot;, &quot;|gastrin|alcohol|nutrient|carcinoma&quot;, &quot;|metapathway|amyloid|fusion_mutants|circadian&quot;), names(gs), ignore.case = T)] gl &lt;- resdf$L2FC names(gl) &lt;- resdf$gene_symbol gl &lt;- gl[!is.na(names(gl)) &amp; names(gl) != &quot;&quot; &amp; !is.na(gl) &amp; is.finite(gl)] gl &lt;- gl[order(-gl)] gl &lt;- gl[!duplicated(names(gl))] gseres &lt;- fgseaSimple(pathways = gs, stats = gl, nperm = 1000, minSize = 10, maxSize = 500) %&gt;% dplyr::filter(lengths(leadingEdge) &gt; 3) %&gt;% arrange(pval) write.xlsx(gseres, &quot;../results/ICN1_IM_DE_fullGSEA.2021-02-08.xlsx&quot;, row.names = F, firstRow=T, firstCol=T) plotpaths &lt;- c(dplyr::filter(gseres, NES &gt; 0) %&gt;% top_n(5, -pval) %&gt;% .$pathway, rev(dplyr::filter(gseres, NES &lt; 0) %&gt;% top_n(5, -pval) %&gt;% .$pathway)) plotGseaTable(gs[plotpaths], gl, gseres, gseaParam = 0.25) gseres %&gt;% dplyr::filter(pval &lt; 0.1) %&gt;% dplyr::select(pathway, pval, padj, NES, leadingEdge) %&gt;% mutate(pathway = ifelse(pathway %in% names(internal_gs), pathway, paste0(&#39;&lt;a href=https://www.gsea-msigdb.org/gsea/msigdb/cards/&#39;, pathway, &#39;.html&gt;&#39;, substr(pathway, 0,30), &#39;&lt;/a&gt;&#39;)), pval = round(pval, 5), padj = round(padj, 5), NES = round(NES, 3), leadingEdge = sapply(leadingEdge, function(x) paste0(x, collapse = &quot;,&quot;))) %&gt;% DT::datatable(escape = F, rownames = F, colnames = c(&quot;Pathway&quot;,&quot;pval&quot;,&quot;qval&quot;,&quot;NES&quot;,&quot;Enriched Genes&quot;), options = list( scrollX = TRUE, columnDefs = list(list( targets = 4, render = JS( &quot;function(data, type, row, meta) {&quot;, &quot;return type === &#39;display&#39; &amp;&amp; data.length &gt; 30 ?&quot;, &quot;&#39;&lt;span title=\\&quot;&#39; + data + &#39;\\&quot;&gt;&#39; + data.substr(0, 30) + &#39;...&lt;/span&gt;&#39; : data;&quot;, &quot;}&quot;))) ), callback = JS(&#39;table.page(3).draw(false);&#39;)) 3.9 Select GSEA poi &lt;- c(&quot;KEGG_JAK_STAT_SIGNALING_PATHWAY&quot;, &quot;HALLMARK_MYC_TARGETS_V2&quot;, &quot;HALLMARK_KRAS_SIGNALING_DN&quot;, &quot;HALLMARK_KRAS_SIGNALING_UP&quot;, &quot;HALLMARK_UNFOLDED_PROTEIN_RESPONSE&quot;, &quot;REACTOME_ONCOGENE_INDUCED_SENESCENCE&quot;, &quot;GO_PROTEIN_LOCALIZATION_TO_PHAGOPHORE_ASSEMBLY_SITE&quot;, &quot;GO_PHAGOPHORE_ASSEMBLY_SITE_MEMBRANE&quot;, &quot;REACTOME_INTRA_GOLGI_TRAFFIC&quot;, &quot;REACTOME_ATF6_ATF6_ALPHA_ACTIVATES_CHAPERONE_GENES&quot;, &quot;HALLMARK_GLYCOLYSIS&quot;, &quot;Prdm1_repressed_preB&quot;) gsub &lt;- gs[names(gs) %in% poi] gseres &lt;- fgseaSimple(pathways = gsub, stats = gl, nperm = 10000) %&gt;% arrange(pval) saveRDS(gseres, &quot;../processed_data/RNAseq/ICN1_IM_DE_subGSEA.2021-02-08.rds&quot;) write.xlsx(gseres, &quot;../results/ICN1_IM_DE_subGSEA.2021-02-08.xlsx&quot;, row.names = F, firstRow=T, firstCol=T) gseres &lt;- readRDS(&quot;../processed_data/RNAseq/ICN1_IM_DE_subGSEA.2021-02-08.rds&quot;) gseres %&gt;% dplyr::select(pathway, pval, padj, NES, leadingEdge) %&gt;% mutate(pathway = ifelse(pathway %in% names(internal_gs), pathway, paste0(&#39;&lt;a href=https://www.gsea-msigdb.org/gsea/msigdb/cards/&#39;, pathway, &#39;.html&gt;&#39;, substr(pathway, 0,30), &#39;&lt;/a&gt;&#39;)), pval = round(pval, 5), padj = round(padj, 5), NES = round(NES, 3), leadingEdge = sapply(leadingEdge, function(x) paste0(x, collapse = &quot;,&quot;))) %&gt;% DT::datatable(escape = F, rownames = F, colnames = c(&quot;Pathway&quot;,&quot;pval&quot;,&quot;qval&quot;,&quot;NES&quot;,&quot;Enriched Genes&quot;), options = list( scrollX = TRUE, columnDefs = list(list( targets = 4, render = JS( &quot;function(data, type, row, meta) {&quot;, &quot;return type === &#39;display&#39; &amp;&amp; data.length &gt; 30 ?&quot;, &quot;&#39;&lt;span title=\\&quot;&#39; + data + &#39;\\&quot;&gt;&#39; + data.substr(0, 30) + &#39;...&lt;/span&gt;&#39; : data;&quot;, &quot;}&quot;))) ), callback = JS(&#39;table.page(3).draw(false);&#39;)) 3.10 GSEA plots source(&quot;../../resources/fsea.R&quot;) library(rvg) library(officer) pl &lt;- lapply(gseres$pathway, function(x) { plot_fgsea(gseres, gl, gs, x) + ggtitle(x) + theme(plot.title = element_text(size=9)) }) cowplot::plot_grid(plotlist = pl[1:9], align = &quot;vh&quot;, ncol = 3) plotidx &lt;- ceiling(1:length(pl) / 3) ppt &lt;- read_pptx() lapply(unique(plotidx), function(idx) { p &lt;- cowplot::plot_grid(plotlist = pl[which(plotidx==idx)], align = &quot;vh&quot;, ncol = 3) add_slide(x = ppt, layout = &quot;Title and Content&quot;, master = &quot;Office Theme&quot;) %&gt;% ph_with(value = dml(ggobj = p), location = ph_location(height = 2, width = 9, left = 0.25, top = 0.5), bg = &quot;transparent&quot;) }) print(ppt, target=&quot;../img/ICN1_IM_DE_subGSEAplots.2021-02-08.pptx&quot;) 3.11 Downloads Differential expression results (xlsx). Full GSEA results for exploratory analysis (xlsx). GSEA subset for stats on selected pathways (xlsx). GSEA plots (vecotorised pptx). 3.12 Session info sessionInfo() ## R version 4.0.4 (2021-02-15) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Catalina 10.15.7 ## ## Matrix products: default ## BLAS: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] parallel stats4 stats graphics grDevices utils datasets ## [8] methods base ## ## other attached packages: ## [1] officer_0.3.17 rvg_0.2.5 ## [3] fgsea_1.16.0 msigdbr_7.2.1 ## [5] ggrepel_0.9.1 EnsDb.Hsapiens.v86_2.99.0 ## [7] ensembldb_2.14.0 AnnotationFilter_1.14.0 ## [9] GenomicFeatures_1.42.2 AnnotationDbi_1.52.0 ## [11] DT_0.17 openxlsx_4.2.3 ## [13] DESeq2_1.30.1 SummarizedExperiment_1.20.0 ## [15] Biobase_2.50.0 MatrixGenerics_1.2.1 ## [17] matrixStats_0.58.0 GenomicRanges_1.42.0 ## [19] GenomeInfoDb_1.26.4 IRanges_2.24.1 ## [21] S4Vectors_0.28.1 BiocGenerics_0.36.0 ## [23] tximport_1.18.0 forcats_0.5.1 ## [25] stringr_1.4.0 dplyr_1.0.5 ## [27] purrr_0.3.4 readr_1.4.0 ## [29] tidyr_1.1.3 tibble_3.1.0 ## [31] ggplot2_3.3.3 tidyverse_1.3.0 ## ## loaded via a namespace (and not attached): ## [1] readxl_1.3.1 uuid_0.1-4 backports_1.2.1 ## [4] fastmatch_1.1-0 BiocFileCache_1.14.0 systemfonts_1.0.1 ## [7] lazyeval_0.2.2 splines_4.0.4 BiocParallel_1.24.1 ## [10] crosstalk_1.1.1 digest_0.6.27 htmltools_0.5.1.1 ## [13] fansi_0.4.2 magrittr_2.0.1 memoise_2.0.0 ## [16] Biostrings_2.58.0 annotate_1.68.0 modelr_0.1.8 ## [19] askpass_1.1 prettyunits_1.1.1 colorspace_2.0-0 ## [22] blob_1.2.1 rvest_1.0.0 rappdirs_0.3.3 ## [25] haven_2.3.1 xfun_0.22 crayon_1.4.1 ## [28] RCurl_1.98-1.3 jsonlite_1.7.2 genefilter_1.72.1 ## [31] survival_3.2-10 glue_1.4.2 gtable_0.3.0 ## [34] zlibbioc_1.36.0 XVector_0.30.0 DelayedArray_0.16.2 ## [37] scales_1.1.1 DBI_1.1.1 Rcpp_1.0.6 ## [40] xtable_1.8-4 progress_1.2.2 bit_4.0.4 ## [43] htmlwidgets_1.5.3 httr_1.4.2 RColorBrewer_1.1-2 ## [46] ellipsis_0.3.1 pkgconfig_2.0.3 XML_3.99-0.6 ## [49] farver_2.1.0 sass_0.3.1 dbplyr_2.1.0 ## [52] locfit_1.5-9.4 utf8_1.2.1 tidyselect_1.1.0 ## [55] labeling_0.4.2 rlang_0.4.10 munsell_0.5.0 ## [58] cellranger_1.1.0 tools_4.0.4 cachem_1.0.4 ## [61] cli_2.3.1 generics_0.1.0 RSQLite_2.2.4 ## [64] broom_0.7.5 evaluate_0.14 fastmap_1.1.0 ## [67] yaml_2.2.1 knitr_1.31 bit64_4.0.5 ## [70] fs_1.5.0 zip_2.1.1 xml2_1.3.2 ## [73] biomaRt_2.46.3 compiler_4.0.4 rstudioapi_0.13 ## [76] curl_4.3 reprex_1.0.0 geneplotter_1.68.0 ## [79] bslib_0.2.4 stringi_1.5.3 highr_0.8 ## [82] gdtools_0.2.3 lattice_0.20-41 ProtGenerics_1.22.0 ## [85] Matrix_1.3-2 vctrs_0.3.6 pillar_1.5.1 ## [88] lifecycle_1.0.0 jquerylib_0.1.3 cowplot_1.1.1 ## [91] data.table_1.14.0 bitops_1.0-6 rtracklayer_1.50.0 ## [94] R6_2.5.0 bookdown_0.21 gridExtra_2.3 ## [97] assertthat_0.2.1 openssl_1.4.3 withr_2.4.1 ## [100] GenomicAlignments_1.26.0 Rsamtools_2.6.0 GenomeInfoDbData_1.2.4 ## [103] hms_1.0.0 grid_4.0.4 rmarkdown_2.7 ## [106] lubridate_1.7.10 "],["stat5-cayf-de.html", "Section4 STAT5-CA/YF DE 4.1 Load data 4.2 GSEA 4.3 Select GSEA 4.4 GSEA plots 4.5 Downloads 4.6 Session info", " Section4 STAT5-CA/YF DE library(tidyverse) library(tximport) library(DESeq2) library(EnsDb.Hsapiens.v86) library(ggplot2) library(openxlsx) library(msigdbr) library(DT) library(fgsea) txdb &lt;- EnsDb.Hsapiens.v86 4.1 Load data # make tx2gene k &lt;- keys(txdb, keytype = &quot;TXID&quot;) tx2gene &lt;- ensembldb::select(txdb, k, &quot;GENEID&quot;, &quot;TXID&quot;) # load quant data files &lt;- list.files(&quot;../processed_data/RNAseq/STAT5_CA_YF_salmon&quot;, pattern = &quot;quant.sf&quot;, recursive = T, full.names = T) pattern &lt;- &quot;^.+(STAT5A_YF_IM|STAT5A_CA|EV_IM|EV)/quant.sf$&quot; smi &lt;- data.frame(row.names = sub(pattern, &quot;\\\\1&quot;,files), condition = sub(pattern, &quot;\\\\1&quot;,files)) names(files) &lt;- smi$sample_id txi &lt;- tximport(files, type = &quot;salmon&quot;, tx2gene = tx2gene, ignoreTxVersion = T) # normalised counts dds &lt;- DESeqDataSetFromTximport(txi, colData = smi, design = ~condition) dds &lt;- dds[rowMeans(counts(dds)) &gt; 5, ] rlog &lt;- rlog(dds) deres &lt;- assay(rlog) %&gt;% as.data.frame() deres$ensembl_id &lt;- rownames(rlog) rownames(deres) &lt;- NULL deres$gene_symbol &lt;- mapIds(txdb, keys= deres$ensembl_id, keytype = &quot;GENEID&quot;, column = &quot;SYMBOL&quot;) deres$L2FC_CA_vs_YFIM &lt;- deres$STAT5A_CA - deres$STAT5A_YF_IM deres$L2FC_CA_vs_EV &lt;- deres$STAT5A_CA - deres$EV deres$L2FC_YFIM_vs_EV &lt;- deres$STAT5A_YF_IM - deres$EV deres$L2FC_EVIM_vs_EV &lt;- deres$EV_IM - deres$EV deres &lt;- deres[,c(6,5,7:10,1:4)] %&gt;% arrange(-L2FC_CA_vs_YFIM) saveRDS(deres, &quot;../processed_data/RNAseq/STAT5_CA_YF_DE.2021-03-22.rds&quot;) write.xlsx(deres, &quot;../results/STAT5_CA_YF_DEres.2021-03-22.xlsx&quot;, firstRow=T, firstCol=T) 4.2 GSEA deres &lt;- readRDS(&quot;../processed_data/RNAseq/STAT5_CA_YF_DE.2021-03-22.rds&quot;) # set gene ranks comparisons &lt;- colnames(deres)[grep(&quot;L2FC&quot;, colnames(deres))] names(comparisons) &lt;- sub(&quot;L2FC_(.+)&quot;, &quot;\\\\1&quot;, comparisons) gl &lt;- lapply(comparisons, function(comp) { deres[,c(&quot;gene_symbol&quot;, comp)] %&gt;% arrange(-!!sym(comp)) %&gt;% na.omit() %&gt;% deframe() }) # custom pathways custom &lt;- list(custom_autophagy = c(&quot;ATG10&quot;,&quot;ATG14&quot;,&quot;WIPI2&quot;,&quot;ATG13&quot;, &quot;ATG16L2&quot;,&quot;MAP1LC3B&quot;,&quot;ULK1&quot;,&quot;ATG4D&quot;, &quot;BECN1&quot;,&quot;TFE3&quot;,&quot;ATG9A&quot;,&quot;ATG12&quot;, &quot;ATG2A&quot;,&quot;ULK3&quot;,&quot;ATG4A&quot;,&quot;ATG101&quot;, &quot;RAB24&quot;,&quot;TFEB&quot;,&quot;PIK3C3&quot;,&quot;ULK2&quot;), custom_catabolism = c(&quot;SLC2A1&quot;,&quot;GPI1&quot;,&quot;ALDOA&quot;,&quot;PGK1&quot;, &quot;ENO1&quot;,&quot;LDHA&quot;,&quot;MYC&quot;,&quot;INSR&quot;,&quot;HK2&quot;,&quot;PFKL&quot;, &quot;PFKP&quot;,&quot;TPI1&quot;,&quot;GAPDH&quot;,&quot;PGAM1&quot;,&quot;PKM&quot;,&quot;ME2&quot;, &quot;GRHPR&quot;,&quot;ODC1&quot;,&quot;PFKM&quot;,&quot;IRS1&quot;,&quot;BCL6&quot;, &quot;CPT1A&quot;,&quot;ABCD1&quot;,&quot;BECN1&quot;,&quot;SLC44A1&quot;,&quot;CHKB&quot;, &quot;PCYT1A&quot;,&quot;PCYT1B&quot;,&quot;MAP1C3B&quot;,&quot;LIPE&quot;, &quot;ULK3&quot;,&quot;ACOX3&quot;,&quot;WIPI2&quot;,&quot;ACSS1&quot;,&quot;ATG4D&quot;)) # general pathways msig &lt;- rbind(msigdbr(category = &quot;H&quot;), msigdbr(category = &quot;C2&quot;, subcategory = &quot;CP:REACTOME&quot;), msigdbr(category = &quot;C2&quot;, subcategory = &quot;CP:KEGG&quot;), msigdbr(category = &quot;C5&quot;)) gs &lt;- split(msig$gene_symbol, msig$gs_name) internal_gs &lt;- readRDS(&quot;../../resources/public_genesets_Hs.rds&quot;) # combine &amp; filter gs &lt;- c(gs, internal_gs, custom) gs &lt;- gs[!grepl(paste0(&quot;sperm|xeno|graft|naba|spinal|neuro|sclerosis&quot;, &quot;|tion_of_hscs|photo|leish|diabetes|lupus|ebola&quot;, &quot;|staph|syndrome|myo|nicotin|asthma|thyroid_stim&quot;, &quot;|gastrin|alcohol|nutrient|carcinoma|muscle_contr&quot;, &quot;|metapathway|amyloid|fusion_mutants|circadian&quot;), names(gs), ignore.case = T)] gseres &lt;- lapply(gl, function(x) { fgseaSimple(pathways = gs, stats = x, nperm = 1000, maxSize = 500) %&gt;% dplyr::filter(lengths(leadingEdge) &gt; 3) %&gt;% arrange(pval) }) wb &lt;- createWorkbook() null &lt;- lapply(names(gseres), function(contrast) { gse &lt;- as.data.frame(gseres[[contrast]]) addWorksheet(wb, sheetName = contrast) writeData(wb, gse, sheet = contrast, rowNames = F) freezePane(wb, sheet = contrast, firstRow = TRUE, firstCol = TRUE) return(NULL) }) saveWorkbook(wb, &quot;../results/STAT5_CA_YF_DE_fullGSEA.2021-03-22.xlsx&quot;, overwrite = T) lapply(names(gseres), function(x) { tmp &lt;- gseres[[x]] %&gt;% dplyr::filter(pval &lt; 0.1) %&gt;% dplyr::select(pathway, NES) tmp[,2] &lt;- round(tmp[,2], 3) colnames(tmp)[2] &lt;- x return(tmp) }) %&gt;% Reduce(f = function(x,y) { merge(x, y, by=&quot;pathway&quot;) }) %&gt;% arrange(-apply(., 1, var)) %&gt;% mutate(pathway = ifelse(pathway %in% names(internal_gs), pathway, paste0(&#39;&lt;a href=https://www.gsea-msigdb.org/gsea/msigdb/cards/&#39;, pathway, &#39;.html&gt;&#39;, substr(pathway, 0,30), &#39;&lt;/a&gt;&#39;))) %&gt;% DT::datatable(escape = F, rownames = F, options = list( scrollX = TRUE)) 4.3 Select GSEA poi &lt;- c(&quot;KEGG_JAK_STAT_SIGNALING_PATHWAY&quot;, &quot;HALLMARK_MYC_TARGETS_V2&quot;, &quot;HALLMARK_UNFOLDED_PROTEIN_RESPONSE&quot;, &quot;REACTOME_ONCOGENE_INDUCED_SENESCENCE&quot;, &quot;REACTOME_INTRA_GOLGI_TRAFFIC&quot;, &quot;custom_autophagy&quot;,&quot;custom_catabolism&quot;, &quot;GO_PROTEIN_LOCALIZATION_TO_PHAGOPHORE_ASSEMBLY_SITE&quot;, &quot;GO_PHAGOPHORE_ASSEMBLY_SITE_MEMBRANE&quot;, &quot;Staudt_sigDB_BCR_activation&quot;, &quot;REACTOME_ATF6_ATF6_ALPHA_ACTIVATES_CHAPERONE_GENES&quot;, &quot;HALLMARK_GLYCOLYSIS&quot;, &quot;HALLMARK_KRAS_SIGNALING_UP&quot;, &quot;HALLMARK_MTORC1_SIGNALING&quot;, &quot;Prdm1_repressed_preB&quot;) gsub &lt;- gs[names(gs) %in% poi] gseres &lt;- lapply(gl, function(x) { fgseaSimple(pathways = gsub, stats = x, nperm = 10000, minSize = 10, maxSize = 500) %&gt;% arrange(pval) }) saveRDS(gseres, &quot;../processed_data/RNAseq/STAT5_CA_YF_subGSEA.2021-03-22.rds&quot;) wb &lt;- createWorkbook() null &lt;- lapply(names(gseres), function(contrast) { gse &lt;- as.data.frame(gseres[[contrast]]) addWorksheet(wb, sheetName = contrast) writeData(wb, gse, sheet = contrast, rowNames = F) freezePane(wb, sheet = contrast, firstRow = TRUE, firstCol = TRUE) }) saveWorkbook(wb, &quot;../results/STAT5_CA_YF_subGSEA.2021-03-22.xlsx&quot;, overwrite = T) 4.4 GSEA plots source(&quot;../../resources/fsea.R&quot;) library(rvg) library(officer) library(cowplot) ppt &lt;- read_pptx() pl &lt;- lapply(poi, function(path) { pathplots &lt;- lapply(names(gseres), function(contrast) { plot_fgsea(gseres[[contrast]], gl[[contrast]], gs, path) + ggtitle(contrast) + theme(plot.title = element_text(size=10)) }) title &lt;- ggdraw() + draw_label(path) combined &lt;- plot_grid(plotlist = pathplots, align = &quot;vh&quot;, ncol = 2) p &lt;- plot_grid(title, combined, ncol = 1, rel_heights = c(0.05, 1)) add_slide(x = ppt, layout = &quot;Title and Content&quot;, master = &quot;Office Theme&quot;) %&gt;% ph_with(value = dml(ggobj = p), location = ph_location(height = 5, width = 9, left = 0.25, top = 0.5), bg = &quot;transparent&quot;) return(p) }) names(pl) &lt;- poi print(ppt, target=&quot;../img/STAT5_CA_YF_subGSEAplots.2021-03-22.pptx&quot;) pl$GO_PHAGOPHORE_ASSEMBLY_SITE_MEMBRANE 4.5 Downloads Differential expression results (xlsx). Full GSEA results for exploratory analysis (xlsx). GSEA subset for stats on selected pathways (xlsx). GSEA plots (vecotorised pptx). 4.6 Session info sessionInfo() ## R version 4.0.4 (2021-02-15) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Catalina 10.15.7 ## ## Matrix products: default ## BLAS: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] parallel stats4 stats graphics grDevices utils datasets ## [8] methods base ## ## other attached packages: ## [1] gdtools_0.2.3 cowplot_1.1.1 ## [3] officer_0.3.17 rvg_0.2.5 ## [5] fgsea_1.16.0 DT_0.17 ## [7] msigdbr_7.2.1 openxlsx_4.2.3 ## [9] EnsDb.Hsapiens.v86_2.99.0 ensembldb_2.14.0 ## [11] AnnotationFilter_1.14.0 GenomicFeatures_1.42.2 ## [13] AnnotationDbi_1.52.0 DESeq2_1.30.1 ## [15] SummarizedExperiment_1.20.0 Biobase_2.50.0 ## [17] MatrixGenerics_1.2.1 matrixStats_0.58.0 ## [19] GenomicRanges_1.42.0 GenomeInfoDb_1.26.4 ## [21] IRanges_2.24.1 S4Vectors_0.28.1 ## [23] BiocGenerics_0.36.0 tximport_1.18.0 ## [25] forcats_0.5.1 stringr_1.4.0 ## [27] dplyr_1.0.5 purrr_0.3.4 ## [29] readr_1.4.0 tidyr_1.1.3 ## [31] tibble_3.1.0 ggplot2_3.3.3 ## [33] tidyverse_1.3.0 ## ## loaded via a namespace (and not attached): ## [1] readxl_1.3.1 uuid_0.1-4 backports_1.2.1 ## [4] fastmatch_1.1-0 BiocFileCache_1.14.0 systemfonts_1.0.1 ## [7] lazyeval_0.2.2 splines_4.0.4 BiocParallel_1.24.1 ## [10] crosstalk_1.1.1 digest_0.6.27 htmltools_0.5.1.1 ## [13] fansi_0.4.2 magrittr_2.0.1 memoise_2.0.0 ## [16] Biostrings_2.58.0 annotate_1.68.0 modelr_0.1.8 ## [19] askpass_1.1 prettyunits_1.1.1 colorspace_2.0-0 ## [22] blob_1.2.1 rvest_1.0.0 rappdirs_0.3.3 ## [25] haven_2.3.1 xfun_0.22 crayon_1.4.1 ## [28] RCurl_1.98-1.3 jsonlite_1.7.2 genefilter_1.72.1 ## [31] survival_3.2-10 glue_1.4.2 gtable_0.3.0 ## [34] zlibbioc_1.36.0 XVector_0.30.0 DelayedArray_0.16.2 ## [37] scales_1.1.1 DBI_1.1.1 Rcpp_1.0.6 ## [40] xtable_1.8-4 progress_1.2.2 bit_4.0.4 ## [43] htmlwidgets_1.5.3 httr_1.4.2 RColorBrewer_1.1-2 ## [46] ellipsis_0.3.1 pkgconfig_2.0.3 XML_3.99-0.6 ## [49] farver_2.1.0 sass_0.3.1 dbplyr_2.1.0 ## [52] locfit_1.5-9.4 utf8_1.2.1 tidyselect_1.1.0 ## [55] labeling_0.4.2 rlang_0.4.10 munsell_0.5.0 ## [58] cellranger_1.1.0 tools_4.0.4 cachem_1.0.4 ## [61] cli_2.3.1 generics_0.1.0 RSQLite_2.2.4 ## [64] broom_0.7.5 evaluate_0.14 fastmap_1.1.0 ## [67] yaml_2.2.1 knitr_1.31 bit64_4.0.5 ## [70] fs_1.5.0 zip_2.1.1 xml2_1.3.2 ## [73] biomaRt_2.46.3 compiler_4.0.4 rstudioapi_0.13 ## [76] curl_4.3 reprex_1.0.0 geneplotter_1.68.0 ## [79] bslib_0.2.4 stringi_1.5.3 highr_0.8 ## [82] lattice_0.20-41 ProtGenerics_1.22.0 Matrix_1.3-2 ## [85] vctrs_0.3.6 pillar_1.5.1 lifecycle_1.0.0 ## [88] jquerylib_0.1.3 data.table_1.14.0 bitops_1.0-6 ## [91] rtracklayer_1.50.0 R6_2.5.0 bookdown_0.21 ## [94] gridExtra_2.3 assertthat_0.2.1 openssl_1.4.3 ## [97] withr_2.4.1 GenomicAlignments_1.26.0 Rsamtools_2.6.0 ## [100] GenomeInfoDbData_1.2.4 hms_1.0.0 grid_4.0.4 ## [103] rmarkdown_2.7 lubridate_1.7.10 "],["methods.html", "Section5 Methods 5.1 Clinical data", " Section5 Methods 5.1 Clinical data Gene expression RNA-seq and mutation WGS and WES data from The Cancer Genome Atlas LAML project were downloaded via the Broad Firehose repository (Run date: 2016-01-28) (???). Data was processed in R to 173 patient samples with matched BCL6 expression data (gene-level normalised RSEM v2) &amp; RAS mutational status. RAS mutational status was determined based on presence of absence of missense mutations in any RAS pathway gene, defined as: NRAS, KRAS, BRAF, FLT3, NF1 and PTPN11. Survival analysis was performed in R using the survival package (v3.2.7; (???)). P-values reported indicate Log-Rank test signficances, with BH multiple testr correction where appropriate. "],["appendix.html", "Section6 Appendix 6.1 Gene set sources", " Section6 Appendix 6.1 Gene set sources Masouleh et al. (2014) Prdm1/Blimp1 repressed genes defined by Prdm1-KO in pro- and pre-B cells Schjerven et al. (2017) Ikzf1 activated/respressed genes defined by Ikzf1 References "],["references.html", "References", " References "]]
